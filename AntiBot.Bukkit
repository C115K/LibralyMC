package com.example.antibot;

import org.bukkit.Bukkit;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.entity.Player;
import org.bukkit.entity.Entity;

import java.util.HashSet;

public class AntiBotPlugin extends JavaPlugin implements Listener {

    // HashSet to track suspicious players (bots)
    private HashSet<Player> suspiciousPlayers = new HashSet<>();

    @Override
    public void onEnable() {
        // Register the event listeners
        Bukkit.getPluginManager().registerEvents(this, this);
        getLogger().info("AntiBot Plugin Enabled!");
    }

    @Override
    public void onDisable() {
        getLogger().info("AntiBot Plugin Disabled!");
    }

    // Event to monitor player movement
    @EventHandler
    public void onPlayerMove(PlayerMoveEvent event) {
        Player player = event.getPlayer();

        // Checking if the player has moved too quickly (likely a bot behavior)
        if (event.getFrom().distance(event.getTo()) > 1.5) {
            // Here we might want to add extra checks (like checking if the player is interacting with the world)
            suspiciousPlayers.add(player);
            Bukkit.getScheduler().runTask(this, () -> {
                if (suspiciousPlayers.contains(player)) {
                    player.kickPlayer("Suspicious behavior detected! You have been kicked for being a bot.");
                    suspiciousPlayers.remove(player);
                }
            });
        }
    }

    // Event to monitor if a player is damaged (most bots don't get damaged)
    @EventHandler
    public void onPlayerDamage(EntityDamageEvent event) {
        Entity entity = event.getEntity();
        
        if (entity instanceof Player) {
            Player player = (Player) entity;
            if (suspiciousPlayers.contains(player)) {
                event.setCancelled(true); // Cancel damage if bot-like behavior is detected
            }
        }
    }
}
